<?xml version="1.0" encoding="utf-8"?>
<resources>
    <style name="AppTheme" parent="AppTheme.Base"/>
 
    <style name="AppTheme.Base" parent="Theme.AppCompat">
        <item name="colorPrimary">@color/background</item>
        <item name="colorPrimaryDark">@color/titeactionbar</item>
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="searchViewStyle">@style/MySearchViewStyle</item>
        
    </style>
    <style name="MySearchViewStyle" parent="Widget.AppCompat.SearchView">
<!--     <item name="queryBackground"></item>
    <item name="submitBackground"></item>
    <item name="closeIcon"></item>
    <item name="searchIcon"></item>
    <item name="goIcon"></item>
    <item name="voiceIcon"></item>
    <item name="commitIcon"></item>
    <item name="suggestionRowLayout"></item> -->
</style>
</resources>
<!-- <resources xmlns:android="http://schemas.android.com/apk/res/android">

    
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
   
    <style name="AppBaseTheme" parent="android:Theme.Light">
        
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
       
    </style>

    Application theme.
    <style name="AppTheme" parent="AppBaseTheme">
        All customizations that are NOT specific to a particular API-level can go here.
        <item name="android:actionBarStyle">@style/MyActionBar</item>
    </style>
	<style name="MyActionBar" parent="@android:style/Widget.Holo.Light.ActionBar">
        <item name="android:background">@color/titeactionbar</item>
        <item name="android:titleTextStyle">@style/MyTheme.ActionBar.TitleTextStyle</item>
    </style>
    <style name="MyTheme.ActionBar.TitleTextStyle" parent="android:style/TextAppearance.Holo.Widget.ActionBar.Title" >
     <item name="android:textColor">@color/textcolor</item>
</style>
    
</resources> -->